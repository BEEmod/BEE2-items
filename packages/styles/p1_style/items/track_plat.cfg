"Conditions"
	{
	// Before just about anything, add the tiles to the surface if it's a panel type.
	// Force means it will create them, and override everything already
	// there.
	"Condition"
		{
		"Priority" "-1000"
		"instance" "<ITEM_RAIL_PLATFORM:track_platforms>"
		// 0, 1, 2, 3, 4, 6
		"Result"
			{
			"SetInstVar" "$is_glass 1" // Used if both cube type checks fail.
			// Randomly choose either attachment.
			"Random"	
				{
				"SetInstVar" "$anchor left"
				"SetInstVar" "$anchor right"
				}
			}
		"Condition"
			{
			"InstVar" "$cube_type 1"
			"Result"
				{
				"SetInstVar" "$is_glass 0"
				"SetTiles"
					{
					"Force" "1"
					"Tile" "bbbb"
					"Tile" "bbbb"
					"Tile" "bbbb"
					"Tile" "bbbb"
					}
				}
			}
		"Condition"
			{
			"InstVar" "$cube_type 2"
			"Result"
				{
				"SetInstVar" "$is_glass 0"
				"SetTiles"
					{
					"Force" "1"
					"Tile" "wwww"
					"Tile" "wwww"
					"Tile" "wwww"
					"Tile" "wwww"
					}
				}
			}
		// Note, if 1-block long, all fixup variables are unset.
		"Condition"
			{
			"instvar" "$cube_type >= 3"
			"Result" // Not yet used, don't allow.
				{
				"Error"
					{
					"ID" "VALVE_GEOMETRY:BAD_TRACK_PLAT_CUBE_TYPE"
					"Marker"
						{
						"Type" "Voxel"
						"Offset" "0 0 0"
						}
					}
				}
			}
		"Result"
			{
			// And set the speed.
			"GetItemConfig"
				{
				"ID"        "VALVE_TEST_ELEM"
                "Name"      "TrackPlatSpeed"
                "resultVar" "$speed"
                "Default"   "100"
                }
			}
		}
	"Condition"
		{
		"Priority" "-300"
		"instance" "<ITEM_RAIL_PLATFORM>"
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_platform>"
			"Result"
				{
				// Never starts active.
				"SetInstVar" "$start_active 0"
				}
			}
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_platforms>"
			// If autodrop is set, player presence is required.
			"InstVar" "$disable_autodrop == 1"
			"Result"
				{
				// This adds an item with a virtual input to the platform,
				// giving us exactly the behaviour we want.
				"AttachInputOverlay" 
					{
					"File" "instances/BEE2/clean/items/track/trigger.vmf"
					"name_suffix" "player"
					"input_conf"
						{
						"Out_Activate" "instance:trigger;OnStartTouch"
						"Out_Deactivate" "instance:trigger;OnEndTouchAll"
						}
					}
				}
			}

		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_rail>"
			"BlockType"
				{
				"Offset" "0 0 1"
				"Type"   "GOO_TOP GOO_SINGLE"
				}
			"Orientation" "wall" // Item on the wall
			"Orientation" // Track pointing up/down.
				{
				"Direction" "z"
				"Allow_inverse" "1"
				"From_dir" "x"
				}
			"Result"
				{
				"AddOverlay"
					{
					"File"   "instances/BEE2/p1/items/track/goo.vmf"
					}
				}
			}
		}
	"Condition"
		{
		"instance" "instances/BEE2/p1/items/track/goo.vmf"
		"Result"
			{
			"forceUpright" ""
			"TemplateBrush"
				{
				"ID" "BEE2_TRACK_PLAT_GOO_P1"
				}
			"ChangeInstance" ""
			}
		}

	"Condition"
		{
		// After as much as possible, transfer the brush platform to the correct
		// position.
		// We also need to include the singular track, because the track and platform
		// are combined when 1 block long. Unfortunately they're always glass.
		"Priority" "500"
		"instance" "<ITEM_RAIL_PLATFORM:track_platforms, track_single>"
		"Condition"
			{
			"InstVar" "$is_glass 1"
			"Result"
				{
				"Condition"
					{
					"InstVar" "$anchor right"
					"Result"
						{
						"AddOverlay" "instances/BEE2/p1/items/track/glass_right.vmf"
						}
					"Else"
						{
						"AddOverlay" "instances/BEE2/p1/items/track/glass_left.vmf"
						}
					}
				}
			"Else" // It's a panel.
				{
				"Condition"
					{
					"InstVar" "$anchor right"
					"Result"
						{
						"AddOverlay" "instances/BEE2/p1/items/track/brush_right.vmf"
						"SetInstVar" "$temp BEE2_TRACK_PLAT_PANEL_P1:right"
						}
					"Else"
						{
						"AddOverlay" "instances/BEE2/p1/items/track/brush_left.vmf"
						"SetInstVar" "$temp BEE2_TRACK_PLAT_PANEL_P1:left"
						}
					}
				// Transfer all the tiledefs from the floor to the vertical position.
				"TemplateBrush" "BEE2_ANGLED_PAN_90_TRANSFER"
				// Then copy over faith plates and placement helpers.
				"TransferBullseye"
					{
					"start_pos" "0 0 -64"
					"start_norm" "0 0 1"
					"end_pos" "-64 0 0"
					"end_norm" "-1 0 0"
					}
				// Then make that a panel.
				"CreatePanel"
					{
					"normal" "-1 0 0"
					"pos1" "-64 48 16"
					"pos2" "-64 -48 112"

					"type" "normal"
					"thickness" "8"
					"bevel" "0"
					"nodraw" "1"
					"move_bullseye" "1"
					"Template" "$temp"

					"Keys"
						{
						"classname" "func_brush"
						"solidbsp" "1"
						"origin" "-60 0 0"
						}
					"LocalKeys"
						{
						"parentname" "track_lift_movelinear"
						}
					}
				"RemoveInstVar" "$temp"
				}
			}
		}
	// We need to do a bunch of computation to select the right template
	// shape for the hole. Fortunately it's always black so we can ignore the 
	// tile colour.
	// First run TrackPlatform, which stores the local direction into a var.
	// Then build up the correct template name and place those.
	"Condition"
		{
		"Result"
			{
			"trackPlatform"
				{
				"orig_item"		"<ITEM_RAIL_PLATFORM>"
				"single_plat"	"instances/BEE2/p1/items/track/single.vmf"
				"track_var"     "$orient"
				}
			}
		}
	"Condition"
		{
		"instance" "<ITEM_RAIL_PLATFORM:track_rail>"
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_top>"
			"Condition"
				{
				"instVar" "$anchor right"
				"Result"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:top_UR"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:top_LL"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:top_LR"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:top_UL"
						}
					}
				"Else"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:top_UL"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:top_LR"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:top_UR"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:top_LL"
						}
					}
				}
			}
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_middle>"
			"Condition"
				{
				"instVar" "$anchor right"
				"Result"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:mid_U"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:mid_L"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:mid_L"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:mid_U"
						}
					}
				"Else"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:mid_U"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:mid_L"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:mid_U"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:mid_L"
						}
					}
				}
			}
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_bottom>"
			"Condition"
				{
				"instVar" "$anchor right"
				"Result"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:btm_UR"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:btm_LL"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:btm_LR"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:btm_UL"
						}
					}
				"Else"
					{
					"MapInstVar"
						{
						"$orient" "$temp"
						"N" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:btm_UL"
						"S" "BEE2_TRACK_SCAFFOLD_P1_TOP_HORIZ:btm_LR"
						"E" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:btm_UR"
						"W" "BEE2_TRACK_SCAFFOLD_P1_TOP_VERT:btm_LL"
						}
					}
				}
			}
		"Condition"
			{
			"instance" "<ITEM_RAIL_PLATFORM:track_single>"
			"Condition"
				{
				"instVar" "$anchor right"
				"Result"
					{
					"setinstVar" "$temp BEE2_TRACK_SCAFFOLD_P1_TOP_SINGLE:lower"
					}
				"Else"
					{
					"setinstVar" "$temp BEE2_TRACK_SCAFFOLD_P1_TOP_SINGLE:upper"
					}
				}
			}
		"Result"
			{
			"TemplateBrush"
				{
				"ID" "$temp"
				}
			"RemoveInstVar" "$orient"
			"RemoveInstVar" "$temp"
			"RemoveInstVar" "$anchor"
			"RemoveInstVar" "$color"
			}
		}
	}

"Conditions"
	{
	"Condition"
		{
		"instance"	"[spExitCorr]"
		"Priority" "-300"
		"instvar" "$door_type = vert"
		// Change I/O to that used by vertical doors
		"Result"
			{
			"ChangeIOType"
				{
				"Type" "AND"
				"InvertVar" "$start_open"
				"SpawnFire" "dynamic"
				"Enable_Cmd" "exit_door,Open,,0.00,-1"
				"Disable_Cmd" "exit_door,Close,,0.00,-1"
				}
			}
		}
	"Condition"
		{
		"instance"	"[spExitCorr]"
		// Add door, or frame if no inputs are connected
		"Condition"
			{
			"instvar" "$connectioncount > 0"
			"Switch"
				{
				"Flag" "instvar"
				"$door_type = norm"
					{
					"addOverlay" "instances/BEE2/p1/elevator_sp/exit_door.vmf"
					"TemplateBrush"
						{
						"ID" "BEE2_EXIT_DOOR_FRAME_PORTAL1"
						"ColorVar" "$door_color"
						}
					}
				"$door_type = vert"
					{
					"addOverlay"   "instances/BEE2/p1/elevator_sp/exit_door_vert.vmf"
					"TemplateBrush" "BEE2_NODOOR_FRAME_P1"
					}
				}
			"Else"
				{
				// Add the frame model..
				"AddOverlay"    "<ITEM_EXIT_DOOR:bee2_corr_nodoor>"
				// And that shouldn't have any tiles.
				"TemplateBrush" "BEE2_NODOOR_FRAME_P1"
				}
			}
		// Add exit fizzler
		"Condition"
			{
			"Priority"	"10"
			"Game" "Aperture Tag"
			"Result"
				{
				"addOverlay"
					{
					"File"   "instances/BEE2/p1/elevator_sp/exit_fizz/tag_$fizz_size.vmf"
					}
				}
			"Else"
				{
				"Condition"
					{
					// Tuleby's Portalgun On/Off buttons.
					"Has" "PortalGunOnOff"
					"Result"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz/absolute_$fizz_size.vmf"
						}
					"Else"
						{
						"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz/p2_$fizz_size.vmf"
						}
					}
				}
			}
		// Add restart trigger in preview mode
		"Condition"
			{
			"IfPreview"	"1"
			"StyleVar" "RestartOnExit"
			"Result"
				{
				"addOverlay"	
					{
					"File"	"instances/BEE2/clean/elevator_sp/exit_door_preview.vmf"
					// TODO: remove this rotation once the clean corridors have also been reoriented
					"rotation" "270 180 0"
					}
				}
			}
		}
		
	"Condition"
		{
		// Don't add elevator fizzler in Tag
		"instance"	"[elevatorExit]"
		"NOT"
			{
			"game"	"aptag"
			}
		"Result"
			{
			"AddOverlay" "instances/BEE2/p1/elevator_sp/elevator_exit_fizz.vmf"
			}
		}

	// Check the kind of exit sign, then pick an appropriate instance.
	// $orient indicates if the signs are vertically/horizontally stacked.
	// $arrow is the direction the arrow should point.
	// We never do [E<] / [>E], so only some directions have mirrored variants.
	"Condition"
		{
		"instance" "instances/BEE2/p1/elevator_sp/exit_sign/sign.vmf"
		"Condition"	
			{
			"instvar" "$orient vertical"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow north" { "Suffix" "vert_north" }
				"$arrow south" { "Suffix" "vert_south" }
				"$arrow east" 
					{
					"Random"
						{
						"Suffix" "vert_east_a"
						"Suffix" "vert_east_b"
						}
					}
				"$arrow west"
					{
					"Random"
						{
						"Suffix" "vert_west_a"
						"Suffix" "vert_west_b"
						}
					}
				}
			}
		"Condition"	
			{
			"instvar" "$orient horizontal"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow east" { "Suffix" "horiz_east" }
				"$arrow west" { "Suffix" "horiz_west" }
				"$arrow north" 
					{
					"Random"
						{
						"Suffix" "horiz_north_a"
						"Suffix" "horiz_north_b"
						}
					}
				"$arrow south"
					{
					"Random"
						{
						"Suffix" "horiz_south_a"
						"Suffix" "horiz_south_b"
						}
					}
				}
			}
		}
	}

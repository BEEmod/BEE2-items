"Conditions"
	{
	"Condition"
		{
		"instance"	"[spExitCorr]"
		"Priority" "-300"
		"OR"
			{
			"instvar" "$door_type = vert"
			"instvar" "$attach = up"
			"instvar" "$attach = down"
			}
		// Change I/O to that used by vertical doors
		"Result"
			{
			"ChangeIOType"
				{
				"Type" "AND"
				"InvertVar" "$start_open"
				"SpawnFire" "dynamic"
				"Enable_Cmd" "exit_door,TurnOn,,0.00,-1"
				"Disable_Cmd" "exit_door,TurnOff,,0.00,-1"
				}
			}
		}
	"Condition"
		{
		"Priority"	"10" // Must be after pgun buttons!
		"instance"	"[spExitCorr]"
		// Add door, or frame if no inputs are connected
		"Condition"
			{
			"instvar" "$connectioncount > 0"
			"Switch"
				{
				"flag" "instvar"
				// Floor/ceiling corridors only get vertical doors
				"$attach = down"
					{
					"addOverlay"    "instances/BEE2/p1/elevator_sp/exit_door_floor.vmf"
					}
				"$attach = up"
					{
					"addOverlay"    "instances/BEE2/p1/elevator_sp/exit_door_ceil.vmf"
					}
				"$attach = horizontal"
					{
					"Switch"
						{
						"Flag" "instvar"
						"$door_type = norm"
							{
							"addOverlay" "instances/BEE2/p1/elevator_sp/exit_door.vmf"
							"TemplateBrush"
								{
								"ID" "BEE2_EXIT_DOOR_FRAME_PORTAL1"
								"ColorVar" "$door_color"
								}
							}
						"$door_type = vert"
							{
							"addOverlay"   "instances/BEE2/p1/elevator_sp/exit_door_vert.vmf"
							"TemplateBrush" "BEE2_NODOOR_FRAME_P1"
							}
						}
					}
				}
			"ElseCondition"
				{
				"instvar" "$attach horizontal"
				"Result"
					{
					// Add the frame model..
					"AddOverlay"    "<ITEM_EXIT_DOOR:bee2_corr_nodoor>"
					// And that shouldn't have any tiles.
					"TemplateBrush" "BEE2_NODOOR_FRAME_P1"
					}
				}
			}
		// Add exit fizzler (unless the elevator one is being used instead)
		"Condition"
			{
			"instvar" "$ele_fizz_force != 1"
			"Condition"
				{
				"Game" "Aperture Tag"
				"Result"
					{
					"addOverlay" "instances/BEE2/p1/elevator_sp/exit_fizz/tag_$fizz_size.vmf"
					}
				"Else"
					{
					"Condition"
						{
						// Tuleby's Portalgun On/Off buttons require an absolute fizzler.
						"Has" "NeedsAbsFizz"
						"Result"
							{
							"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz/absolute_$fizz_size.vmf"
							}
						"Else"
							{
							"addoverlay" "instances/BEE2/p1/elevator_sp/exit_fizz/p2_$fizz_size.vmf"
							}
						}
					}
				}
			}
		// Add restart trigger in preview mode
		"Condition"
			{
			"IfPreview"	"1"
			"ItemConfig"
				{
				"ID"    "VALVE_MANDATORY"
				"Name"  "RestartOnExit"
				"Value" "1"
				}
			"Result"
				{
				// Trigger restart when @map_won is triggered.
				"addoverlay" "instances/BEE2/logic/exit_preview.vmf"
				}
			}
		// Remove tiles for floor/ceiling corridors
		"Switch"
			{
			"Flag" "InstVar" 
			"$attach down"
				{
				"TemplateBrush" "BEE2_CLEAR_VOXEL:neg_z"
				}
			"$attach up"
				{
				"TemplateBrush" "BEE2_CLEAR_VOXEL:pos_z"
				}
			}
		}
		
	"Condition"
		{
		"Priority"	"10" // Must be after pgun buttons!
		"instance"	"[elevatorExit]"
		"Result"
			{
			"AddOverlay" "instances/BEE2/p1/elevator_sp/elevator_exit_hall_$ele_hall_color.vmf"
			}
		// Add a fizzler right before the elevator, like in P1
		// Reuse the corridor fizzler instances to avoid duplicating logic
		"Condition"
			{
			"Game" "Aperture Tag"
			"Condition"
				{
				// Don't add the elevator fizzler in Tag if the corridor already has one
				"instvar" "$ele_fizz_force == 1"
				"Result"
					{
					"AddOverlay" 
						{
						"file" "instances/BEE2/p1/elevator_sp/exit_fizz/tag_128.vmf"
						"offset" "-672 -32 32"
						"rotation" "0 180 0"
						}
					}
				}
			"ElseCondition"
				{
				// Tuleby's Portalgun On/Off buttons require an absolute fizzler.
				// Don't add one if it's already in the corridor
				"Has" "NeedsAbsFizz"
				"instvar" "$ele_fizz_force == 1"
				"Result"
					{
					"AddOverlay" 
						{
						"file" "instances/BEE2/p1/elevator_sp/exit_fizz/absolute_128.vmf"
						"offset" "-672 -32 96"
						"rotation" "0 180 0"
						}
					}
				"Else"
					{
					"AddOverlay" 
						{
						"file" "instances/BEE2/p1/elevator_sp/exit_fizz/p2_128.vmf"
						"offset" "-672 -32 96"
						"rotation" "0 180 0"
						}
					}
				}
			}
		}

	// Check the kind of exit sign, then pick an appropriate instance.
	// $orient indicates if the signs are vertically/horizontally stacked.
	// $arrow is the direction the arrow should point.
	// We never do [E<] / [>E], so only some directions have mirrored variants.
	"Condition"
		{
		"instance" "instances/BEE2/p1/elevator_sp/exit_sign/sign.vmf"
		"Condition"	
			{
			"instvar" "$orient vertical"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow north" { "Suffix" "vert_north" }
				"$arrow south" { "Suffix" "vert_south" }
				"$arrow east" 
					{
					"Random"
						{
						"Suffix" "vert_east_a"
						"Suffix" "vert_east_b"
						}
					}
				"$arrow west"
					{
					"Random"
						{
						"Suffix" "vert_west_a"
						"Suffix" "vert_west_b"
						}
					}
				}
			}
		"Condition"	
			{
			"instvar" "$orient horizontal"
			"Switch"
				{
				"Flag" "instvar"
				"$arrow east" { "Suffix" "horiz_east" }
				"$arrow west" { "Suffix" "horiz_west" }
				"$arrow north" 
					{
					"Random"
						{
						"Suffix" "horiz_north_a"
						"Suffix" "horiz_north_b"
						}
					}
				"$arrow south"
					{
					"Random"
						{
						"Suffix" "horiz_south_a"
						"Suffix" "horiz_south_b"
						}
					}
				}
			}
		}
	}
